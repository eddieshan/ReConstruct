namespace ReConstruct.Geometry

open System

module internal DualContouringTables =

    let QuadsTraversal = [|
        [| [|0; 0; 0; |]; [|1; 0; 0; |]; [|0; 1; 0; |]; [|0; 1; 0; |]; [|1; 0; 0; |]; [|1; 1; 0; |]; |] // Left face
        [| [|0; 0; 0; |]; [|1; 0; 0; |]; [|0; 0; 1; |]; [|1; 0; 0; |]; [|0; 0; 1; |]; [|1; 0; 1; |]; |] // Top face
        [| [|0; 0; 0; |]; [|0; 0; 1; |]; [|0; 1; 0; |]; [|0; 0; 1; |]; [|0; 1; 0; |]; [|0; 1; 1; |]; |] // Front face
    |]

    let EdgeContributions =
        [|[||]; [|0; 3; 8|]; [|0; 1; 9|]; [|1; 3; 8; 9|]; [|1; 2; 10|];
        [|0; 1; 2; 3; 8; 10|]; [|0; 2; 9; 10|]; [|2; 3; 8; 9; 10|]; [|2; 3; 11|];
        [|0; 2; 8; 11|]; [|0; 1; 2; 3; 9; 11|]; [|1; 2; 8; 9; 11|];
        [|1; 3; 10; 11|]; [|0; 1; 8; 10; 11|]; [|0; 3; 9; 10; 11|];
        [|8; 9; 10; 11|]; [|4; 7; 8|]; [|0; 3; 4; 7|]; [|0; 1; 4; 7; 8; 9|];
        [|1; 3; 4; 7; 9|]; [|1; 2; 4; 7; 8; 10|]; [|0; 1; 2; 3; 4; 7; 10|];
        [|0; 2; 4; 7; 8; 9; 10|]; [|2; 3; 4; 7; 9; 10|]; [|2; 3; 4; 7; 8; 11|];
        [|0; 2; 4; 7; 11|]; [|0; 1; 2; 3; 4; 7; 8; 9; 11|]; [|1; 2; 4; 7; 9; 11|];
        [|1; 3; 4; 7; 8; 10; 11|]; [|0; 1; 4; 7; 10; 11|];
        [|0; 3; 4; 7; 8; 9; 10; 11|]; [|4; 7; 9; 10; 11|]; [|4; 5; 9|];
        [|0; 3; 4; 5; 8; 9|]; [|0; 1; 4; 5|]; [|1; 3; 4; 5; 8|];
        [|1; 2; 4; 5; 9; 10|]; [|0; 1; 2; 3; 4; 5; 8; 9; 10|]; [|0; 2; 4; 5; 10|];
        [|2; 3; 4; 5; 8; 10|]; [|2; 3; 4; 5; 9; 11|]; [|0; 2; 4; 5; 8; 9; 11|];
        [|0; 1; 2; 3; 4; 5; 11|]; [|1; 2; 4; 5; 8; 11|]; [|1; 3; 4; 5; 9; 10; 11|];
        [|0; 1; 4; 5; 8; 9; 10; 11|]; [|0; 3; 4; 5; 10; 11|]; [|4; 5; 8; 10; 11|];
        [|5; 7; 8; 9|]; [|0; 3; 5; 7; 9|]; [|0; 1; 5; 7; 8|]; [|1; 3; 5; 7|];
        [|1; 2; 5; 7; 8; 9; 10|]; [|0; 1; 2; 3; 5; 7; 9; 10|];
        [|0; 2; 5; 7; 8; 10|]; [|2; 3; 5; 7; 10|]; [|2; 3; 5; 7; 8; 9; 11|];
        [|0; 2; 5; 7; 9; 11|]; [|0; 1; 2; 3; 5; 7; 8; 11|]; [|1; 2; 5; 7; 11|];
        [|1; 3; 5; 7; 8; 9; 10; 11|]; [|0; 1; 5; 7; 9; 10; 11|];
        [|0; 3; 5; 7; 8; 10; 11|]; [|5; 7; 10; 11|]; [|5; 6; 10|];
        [|0; 3; 5; 6; 8; 10|]; [|0; 1; 5; 6; 9; 10|]; [|1; 3; 5; 6; 8; 9; 10|];
        [|1; 2; 5; 6|]; [|0; 1; 2; 3; 5; 6; 8|]; [|0; 2; 5; 6; 9|];
        [|2; 3; 5; 6; 8; 9|]; [|2; 3; 5; 6; 10; 11|]; [|0; 2; 5; 6; 8; 10; 11|];
        [|0; 1; 2; 3; 5; 6; 9; 10; 11|]; [|1; 2; 5; 6; 8; 9; 10; 11|];
        [|1; 3; 5; 6; 11|]; [|0; 1; 5; 6; 8; 11|]; [|0; 3; 5; 6; 9; 11|];
        [|5; 6; 8; 9; 11|]; [|4; 5; 6; 7; 8; 10|]; [|0; 3; 4; 5; 6; 7; 10|];
        [|0; 1; 4; 5; 6; 7; 8; 9; 10|]; [|1; 3; 4; 5; 6; 7; 9; 10|];
        [|1; 2; 4; 5; 6; 7; 8|]; [|0; 1; 2; 3; 4; 5; 6; 7|];
        [|0; 2; 4; 5; 6; 7; 8; 9|]; [|2; 3; 4; 5; 6; 7; 9|];
        [|2; 3; 4; 5; 6; 7; 8; 10; 11|]; [|0; 2; 4; 5; 6; 7; 10; 11|];
        [|0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11|]; [|1; 2; 4; 5; 6; 7; 9; 10; 11|];
        [|1; 3; 4; 5; 6; 7; 8; 11|]; [|0; 1; 4; 5; 6; 7; 11|];
        [|0; 3; 4; 5; 6; 7; 8; 9; 11|]; [|4; 5; 6; 7; 9; 11|]; [|4; 6; 9; 10|];
        [|0; 3; 4; 6; 8; 9; 10|]; [|0; 1; 4; 6; 10|]; [|1; 3; 4; 6; 8; 10|];
        [|1; 2; 4; 6; 9|]; [|0; 1; 2; 3; 4; 6; 8; 9|]; [|0; 2; 4; 6|];
        [|2; 3; 4; 6; 8|]; [|2; 3; 4; 6; 9; 10; 11|]; [|0; 2; 4; 6; 8; 9; 10; 11|];
        [|0; 1; 2; 3; 4; 6; 10; 11|]; [|1; 2; 4; 6; 8; 10; 11|];
        [|1; 3; 4; 6; 9; 11|]; [|0; 1; 4; 6; 8; 9; 11|]; [|0; 3; 4; 6; 11|];
        [|4; 6; 8; 11|]; [|6; 7; 8; 9; 10|]; [|0; 3; 6; 7; 9; 10|];
        [|0; 1; 6; 7; 8; 10|]; [|1; 3; 6; 7; 10|]; [|1; 2; 6; 7; 8; 9|];
        [|0; 1; 2; 3; 6; 7; 9|]; [|0; 2; 6; 7; 8|]; [|2; 3; 6; 7|];
        [|2; 3; 6; 7; 8; 9; 10; 11|]; [|0; 2; 6; 7; 9; 10; 11|];
        [|0; 1; 2; 3; 6; 7; 8; 10; 11|]; [|1; 2; 6; 7; 10; 11|];
        [|1; 3; 6; 7; 8; 9; 11|]; [|0; 1; 6; 7; 9; 11|]; [|0; 3; 6; 7; 8; 11|];
        [|6; 7; 11|]; [|6; 7; 11|]; [|0; 3; 6; 7; 8; 11|]; [|0; 1; 6; 7; 9; 11|];
        [|1; 3; 6; 7; 8; 9; 11|]; [|1; 2; 6; 7; 10; 11|];
        [|0; 1; 2; 3; 6; 7; 8; 10; 11|]; [|0; 2; 6; 7; 9; 10; 11|];
        [|2; 3; 6; 7; 8; 9; 10; 11|]; [|2; 3; 6; 7|]; [|0; 2; 6; 7; 8|];
        [|0; 1; 2; 3; 6; 7; 9|]; [|1; 2; 6; 7; 8; 9|]; [|1; 3; 6; 7; 10|];
        [|0; 1; 6; 7; 8; 10|]; [|0; 3; 6; 7; 9; 10|]; [|6; 7; 8; 9; 10|];
        [|4; 6; 8; 11|]; [|0; 3; 4; 6; 11|]; [|0; 1; 4; 6; 8; 9; 11|];
        [|1; 3; 4; 6; 9; 11|]; [|1; 2; 4; 6; 8; 10; 11|];
        [|0; 1; 2; 3; 4; 6; 10; 11|]; [|0; 2; 4; 6; 8; 9; 10; 11|];
        [|2; 3; 4; 6; 9; 10; 11|]; [|2; 3; 4; 6; 8|]; [|0; 2; 4; 6|];
        [|0; 1; 2; 3; 4; 6; 8; 9|]; [|1; 2; 4; 6; 9|]; [|1; 3; 4; 6; 8; 10|];
        [|0; 1; 4; 6; 10|]; [|0; 3; 4; 6; 8; 9; 10|]; [|4; 6; 9; 10|];
        [|4; 5; 6; 7; 9; 11|]; [|0; 3; 4; 5; 6; 7; 8; 9; 11|];
        [|0; 1; 4; 5; 6; 7; 11|]; [|1; 3; 4; 5; 6; 7; 8; 11|];
        [|1; 2; 4; 5; 6; 7; 9; 10; 11|]; [|0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11|];
        [|0; 2; 4; 5; 6; 7; 10; 11|]; [|2; 3; 4; 5; 6; 7; 8; 10; 11|];
        [|2; 3; 4; 5; 6; 7; 9|]; [|0; 2; 4; 5; 6; 7; 8; 9|];
        [|0; 1; 2; 3; 4; 5; 6; 7|]; [|1; 2; 4; 5; 6; 7; 8|];
        [|1; 3; 4; 5; 6; 7; 9; 10|]; [|0; 1; 4; 5; 6; 7; 8; 9; 10|];
        [|0; 3; 4; 5; 6; 7; 10|]; [|4; 5; 6; 7; 8; 10|]; [|5; 6; 8; 9; 11|];
        [|0; 3; 5; 6; 9; 11|]; [|0; 1; 5; 6; 8; 11|]; [|1; 3; 5; 6; 11|];
        [|1; 2; 5; 6; 8; 9; 10; 11|]; [|0; 1; 2; 3; 5; 6; 9; 10; 11|];
        [|0; 2; 5; 6; 8; 10; 11|]; [|2; 3; 5; 6; 10; 11|]; [|2; 3; 5; 6; 8; 9|];
        [|0; 2; 5; 6; 9|]; [|0; 1; 2; 3; 5; 6; 8|]; [|1; 2; 5; 6|];
        [|1; 3; 5; 6; 8; 9; 10|]; [|0; 1; 5; 6; 9; 10|]; [|0; 3; 5; 6; 8; 10|];
        [|5; 6; 10|]; [|5; 7; 10; 11|]; [|0; 3; 5; 7; 8; 10; 11|];
        [|0; 1; 5; 7; 9; 10; 11|]; [|1; 3; 5; 7; 8; 9; 10; 11|];
        [|1; 2; 5; 7; 11|]; [|0; 1; 2; 3; 5; 7; 8; 11|]; [|0; 2; 5; 7; 9; 11|];
        [|2; 3; 5; 7; 8; 9; 11|]; [|2; 3; 5; 7; 10|]; [|0; 2; 5; 7; 8; 10|];
        [|0; 1; 2; 3; 5; 7; 9; 10|]; [|1; 2; 5; 7; 8; 9; 10|]; [|1; 3; 5; 7|];
        [|0; 1; 5; 7; 8|]; [|0; 3; 5; 7; 9|]; [|5; 7; 8; 9|]; [|4; 5; 8; 10; 11|];
        [|0; 3; 4; 5; 10; 11|]; [|0; 1; 4; 5; 8; 9; 10; 11|];
        [|1; 3; 4; 5; 9; 10; 11|]; [|1; 2; 4; 5; 8; 11|]; [|0; 1; 2; 3; 4; 5; 11|];
        [|0; 2; 4; 5; 8; 9; 11|]; [|2; 3; 4; 5; 9; 11|]; [|2; 3; 4; 5; 8; 10|];
        [|0; 2; 4; 5; 10|]; [|0; 1; 2; 3; 4; 5; 8; 9; 10|]; [|1; 2; 4; 5; 9; 10|];
        [|1; 3; 4; 5; 8|]; [|0; 1; 4; 5|]; [|0; 3; 4; 5; 8; 9|]; [|4; 5; 9|];
        [|4; 7; 9; 10; 11|]; [|0; 3; 4; 7; 8; 9; 10; 11|]; [|0; 1; 4; 7; 10; 11|];
        [|1; 3; 4; 7; 8; 10; 11|]; [|1; 2; 4; 7; 9; 11|];
        [|0; 1; 2; 3; 4; 7; 8; 9; 11|]; [|0; 2; 4; 7; 11|]; [|2; 3; 4; 7; 8; 11|];
        [|2; 3; 4; 7; 9; 10|]; [|0; 2; 4; 7; 8; 9; 10|]; [|0; 1; 2; 3; 4; 7; 10|];
        [|1; 2; 4; 7; 8; 10|]; [|1; 3; 4; 7; 9|]; [|0; 1; 4; 7; 8; 9|];
        [|0; 3; 4; 7|]; [|4; 7; 8|]; [|8; 9; 10; 11|]; [|0; 3; 9; 10; 11|];
        [|0; 1; 8; 10; 11|]; [|1; 3; 10; 11|]; [|1; 2; 8; 9; 11|];
        [|0; 1; 2; 3; 9; 11|]; [|0; 2; 8; 11|]; [|2; 3; 11|]; [|2; 3; 8; 9; 10|];
        [|0; 2; 9; 10|]; [|0; 1; 2; 3; 8; 10|]; [|1; 2; 10|]; [|1; 3; 8; 9|];
        [|0; 1; 9|]; [|0; 3; 8|]; [||]|]

    let QuadContributions = 
        [|[||]; [|0|]; [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||];
        [|0|]; [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||];
        [|0|]; [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||];
        [|0|]; [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [|1|];
        [|0; 1|]; [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|];
        [|0; 1|]; [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|];
        [|0; 1|]; [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|];
        [|0; 1|]; [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [||]; [|0|];
        [|0; 2; 1|]; [|2; 1|]; [|2|]; [|0; 2|]; [|0; 1|]; [|1|]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]; [|1|]; [|0; 1|];
        [|0; 2|]; [|2|]; [|2; 1|]; [|0; 2; 1|]; [|0|]; [||]|]

    /// Do not remove the commented code below.
    /// It contains ancillary functions and lookups to generate the edge and quad contribution indices.
    /// The functions edgeContributions() and quadContributions() are run in the F# interpreter to generate
    /// static array definitions of EdgeContributions and QuadContributions so they get primed in compile time.
    /// TODO: consider if it would be better to initialize these indices during startup.

    //let EdgeMasks = [|
    //    1 <<< 0;
    //    1 <<< 1;
    //    1 <<< 2;
    //    1 <<< 3;
    //    1 <<< 4;
    //    1 <<< 5;
    //    1 <<< 6;
    //    1 <<< 7;
    //    1 <<< 8;
    //    1 <<< 9;
    //    1 <<< 10;
    //    1 <<< 11;
    //|]

    //let XYZEdges = [| 
    //    [| 1 <<< 0; 0; |]; //(0, 1) -> 0, x axis edge.
    //    [| 1 <<< 9; 1; |]; //(1, 5) -> 9, y axis edge.
    //    [| 1 <<< 1; 2; |]; //(1, 2) -> 1, z axis edge.
    //|]

    //let edgeContributions cubeIndex = 
    //    seq { 0..EdgeTraversal.Length-1 } 
    //        |> Seq.filter(fun i -> (EdgeTable.[cubeIndex] &&& (1 <<< i)) > 0)  
    //        |> Seq.toArray

    //let edgeContributions() = seq { 0..255 } |> Seq.map edgeContributions |> Seq.toArray 

    //let axisEdges = [| 
    //    [| 0; 0; |]; //(0, 1) -> 0, x axis edge.
    //    [| 9; 1; |]; //(1, 5) -> 9, y axis edge.
    //    [| 1; 2; |]; //(1, 2) -> 1, z axis edge.
    //|]

    //let axisEdge n = axisEdges |> Array.tryFind(fun e -> e.[0] = n) |> Option.map(fun e -> e.[1])        

    //let quadContributions() = EdgeContributions |> Array.map(Array.choose axisEdge)
